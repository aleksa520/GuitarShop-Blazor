@page "/guitars"
@inject HttpClient http
@inject IJSRuntime js
@using System.IO

<h3 style="padding:30px" class="card-header-tabs">Guitars</h3>

@*<div>
        <a class="btn btn-success" href="guitars/create">Add Guitar</a>
    </div>*@

<div class="container">

    <GenericList Elements="guitars">
        <NullTemplate>
            <div>
                <img class="center" height="100" width="100" src="http://www.pzv.org.rs/obuke/images/loading.gif" />
            </div>
        </NullTemplate>
        
        <WithElementsTemplate>
            <div style="padding-bottom:10px" class="btn-holder">
                <a class="btn btn-success" href="guitars/create">Add Guitar</a>
            </div>

            <table class="table">
                <thead>
                    <tr>
                        <th>ID</th>
                        <th>Name</th>
                        <th>Price</th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var guitar in guitars)
                    {
                        <tr>
                            <td>@guitar.Id</td>
                            <td>@guitar.Name</td>
                            <td>@guitar.Price $</td>
                            <td>
                                <a class="btn btn-success" href="guitars/edit/@guitar.Id">Edit</a>
                                <button class="btn btn-danger" @onclick="@(()=>DeleteGuitar(guitar.Id))">Delete</button>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
            <div class="btn-holder">
                <button class="btn btn-dark" style="padding:20px" @onclick="ExportAsCSV">Export as CSV</button>
            </div>
        </WithElementsTemplate>
    </GenericList>

    @*<GenericList Elements="guitars">
        <WithIndividualElementTemplate Context="guitar">
            <div class="card">
                <div class="card-body">
                    @guitar.Name
                </div>
            </div>
        </WithIndividualElementTemplate>
    </GenericList>*@

    @*@if (guitars == null)
        {
            <text>Loading...</text>
        }
        else if (guitars.Length == 0)
        {
            <text>There Are No Records in Database...</text>
        }
        else
        {

        }*@
</div>

@code {
    List<Guitar> guitars { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await LoadGuitars();
    }

    async Task LoadGuitars()
    {
        guitars = await http.GetJsonAsync<List<Guitar>>("api/guitars");
    }

    async Task DeleteGuitar(int guitarId)
    {
        //await js.DisplayMassage("My message");
        var guitarSelected = guitars.First(x => x.Id == guitarId);
        if (await js.Confirm("", $"Do You Want To Delete {guitarSelected.Name}?", SweetAlertMessageType.question))
        {
            await http.DeleteAsync($"api/guitars/{guitarId}");
            await LoadGuitars();
        }
    }

    private void ExportAsCSV()
    {
        using (var memoryStream = new MemoryStream())
        {
            using (var writer = new StreamWriter(memoryStream))
            {
                using (var csv = new CsvHelper.CsvWriter(writer))
                {
                    foreach (var guitar in guitars)
                    {
                        csv.WriteRecord(guitar);
                        csv.NextRecord();
                    }
                }

                var arr = memoryStream.ToArray();
                js.SaveAs("guitars.csv", arr);
            }
        }
    }
}
